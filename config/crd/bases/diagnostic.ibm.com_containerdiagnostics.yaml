
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.4.1
  creationTimestamp: null
  name: containerdiagnostics.diagnostic.ibm.com
spec:
  group: diagnostic.ibm.com
  names:
    kind: ContainerDiagnostic
    listKind: ContainerDiagnosticList
    plural: containerdiagnostics
    singular: containerdiagnostic
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .spec.command
      name: Command
      type: string
    - jsonPath: .status.statusMessage
      name: StatusMessage
      type: string
    - jsonPath: .status.result
      name: Result
      type: string
    - jsonPath: .status.download
      name: Download
      type: string
    name: v1
    schema:
      openAPIV3Schema:
        description: ContainerDiagnostic is the Schema for the containerdiagnostics
          API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: ContainerDiagnosticSpec defines the desired state of ContainerDiagnostic
            properties:
              arguments:
                description: Optional. Arguments for the specified Command.
                items:
                  type: string
                type: array
              command:
                description: 'Command is one of: version, script'
                enum:
                - version
                - script
                type: string
              debug:
                default: false
                description: Optional. Whether or not to debug the operator itself.
                  Defaults to false.
                type: boolean
              directory:
                default: /tmp/containerdiag/
                description: Optional. Target directory for diagnostic files. Must
                  end in trailing slash. Defaults to /tmp/containerdiag/.
                type: string
              minDiskSpaceFreeMB:
                default: 15
                description: Optional. Minimum required disk space free (in MB) in
                  the Directory. Defaults to 15MB
                type: integer
              steps:
                description: A list of steps to perform for the specified Command.
                items:
                  properties:
                    arguments:
                      description: The arguments for the command (if any).
                      items:
                        type: string
                      type: array
                    command:
                      enum:
                      - install
                      - execute
                      - package
                      - clean
                      type: string
                  required:
                  - command
                  type: object
                type: array
              targetObjects:
                description: Optional. A list of ObjectReferences. See https://kubernetes.io/docs/reference/kubernetes-api/common-definitions/object-reference/
                items:
                  description: 'ObjectReference contains enough information to let
                    you inspect or modify the referred object. --- New uses of this
                    type are discouraged because of difficulty describing its usage
                    when embedded in APIs.  1. Ignored fields.  It includes many fields
                    which are not generally honored.  For instance, ResourceVersion
                    and FieldPath are both very rarely valid in actual usage.  2.
                    Invalid usage help.  It is impossible to add specific help for
                    individual usage.  In most embedded usages, there are particular     restrictions
                    like, "must refer only to types A and B" or "UID not honored"
                    or "name must be restricted".     Those cannot be well described
                    when embedded.  3. Inconsistent validation.  Because the usages
                    are different, the validation rules are different by usage, which
                    makes it hard for users to predict what will happen.  4. The fields
                    are both imprecise and overly precise.  Kind is not a precise
                    mapping to a URL. This can produce ambiguity     during interpretation
                    and require a REST mapping.  In most cases, the dependency is
                    on the group,resource tuple     and the version of the actual
                    struct is irrelevant.  5. We cannot easily change it.  Because
                    this type is embedded in many locations, updates to this type     will
                    affect numerous schemas.  Don''t make new APIs embed an underspecified
                    API type they do not control. Instead of using this type, create
                    a locally provided and used type that is well-focused on your
                    reference. For example, ServiceReferences for admission registration:
                    https://github.com/kubernetes/api/blob/release-1.17/admissionregistration/v1/types.go#L533
                    .'
                  properties:
                    apiVersion:
                      description: API version of the referent.
                      type: string
                    fieldPath:
                      description: 'If referring to a piece of an object instead of
                        an entire object, this string should contain a valid JSON/Go
                        field access statement, such as desiredState.manifest.containers[2].
                        For example, if the object reference is to a container within
                        a pod, this would take on a value like: "spec.containers{name}"
                        (where "name" refers to the name of the container that triggered
                        the event) or if no container name is specified "spec.containers[2]"
                        (container with index 2 in this pod). This syntax is chosen
                        only to have some well-defined way of referencing a part of
                        an object. TODO: this design is not final and this field is
                        subject to change in the future.'
                      type: string
                    kind:
                      description: 'Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                      type: string
                    name:
                      description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                      type: string
                    namespace:
                      description: 'Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/'
                      type: string
                    resourceVersion:
                      description: 'Specific resourceVersion to which this reference
                        is made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency'
                      type: string
                    uid:
                      description: 'UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids'
                      type: string
                  type: object
                type: array
              useuuid:
                default: true
                description: Optional. Whether or not to use a unique identifier in
                  the directory name of each execution. Defaults to true.
                type: boolean
            type: object
          status:
            description: ContainerDiagnosticStatus defines the observed state of ContainerDiagnostic
            properties:
              download:
                type: string
              downloadContainer:
                type: string
              downloadFileName:
                type: string
              downloadNamespace:
                type: string
              downloadPath:
                type: string
              downloadPod:
                type: string
              log:
                type: string
              result:
                type: string
              statusCode:
                type: integer
              statusMessage:
                type: string
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
